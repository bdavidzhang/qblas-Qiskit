(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     34767,        690]
NotebookOptionsPosition[     34304,        670]
NotebookOutlinePosition[     34678,        686]
CellTagsIndexPosition[     34635,        683]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", " ", "I"}], "*", "t"}], "]"}], "+", "1"}], "2"], "]"}],
      ")"}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", " ", "I"}], "*", "t"}], "]"}], "-", "1"}], "2"], "]"}],
      ")"}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"A", "+", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"A", "/.", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"Pi", "/", "3.0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"B", "/.", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"Pi", "/", "3.0"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{"A", ",", "B", ",", "Z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7547438290645742`*^9, 3.7547439398342233`*^9}, {
  3.7547439712374535`*^9, 3.7547439894746547`*^9}, {3.7547440315820646`*^9, 
  3.754744050986826*^9}, {3.7547440812247677`*^9, 3.7547444039129934`*^9}, {
  3.754744602037717*^9, 3.7547446618726053`*^9}, {3.754744777038811*^9, 
  3.754744780978813*^9}}],

Cell[BoxData["0.7499999999999999`"], "Output",
 CellChangeTimes->{{3.7547439243892717`*^9, 3.7547439404535356`*^9}, {
  3.7547439726654453`*^9, 3.7547439899820185`*^9}, {3.7547440344658723`*^9, 
  3.754744051648374*^9}, {3.75474412989634*^9, 3.754744404432459*^9}, {
  3.7547446264276977`*^9, 3.754744662501545*^9}}],

Cell[BoxData["0.24999999999999994`"], "Output",
 CellChangeTimes->{{3.7547439243892717`*^9, 3.7547439404535356`*^9}, {
  3.7547439726654453`*^9, 3.7547439899820185`*^9}, {3.7547440344658723`*^9, 
  3.754744051648374*^9}, {3.75474412989634*^9, 3.754744404432459*^9}, {
  3.7547446264276977`*^9, 3.754744662504548*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
OWtJV5JRzCQwpe+4FnxWpzXx15DRyLSk/VsPwp/x8tMrdWQs+OOdaMrQgP1H
yPbNzWS8Nf75/Ymy/XBuLnf+dTsZzZ0uKebqK8Htpyf9nnSRkc9dLz+FdR98
YEl+cG2AjOf9lYf1qmVhNO+g+IUh5vgxa48JpO8CbrOxHJ1fZCxKvTlawSIN
slzhSnsnyMhhOOX/ME4CTr7eV7XpNxmzllbGn9lvhWuXeo+RZsioMRH147eP
KCQI+HYS82Scu8Gi9iVpI7x5L2HZvURGC7NuH8VXgjDg3DhRtUrGgF8VFWzH
+IBN1MUjh42CGg4TvLeKuEHiE401lpOC/z1aiG2t4QBd7zehPlwU9I0X8+aJ
W9Wwl75Is11Lwahu4SGl+7Ma4V3kx4b8FOw+MBZ3vG9MoygoT0aNRkHvMzEJ
Tt/6NDoVjEq2b6SgzKZZjwbTWo3FwQXNtVsoeE/nQOwsf6qGSERy419xCsak
E4k/zB01EA6dHpSg4BMqS9E98isNq8mx7w3SFOSc0DyQd7VNI/hh+NXi3RQs
8NG7uwuGNLJ1FOeT5Jnzd67fV398SuPTfK/vHUUKkrWFd1ZaL2pMpflyu6hQ
0LFkl1pFIStsMJJ8cFaDgkmfv6h7S1FAibVJ7JAWBeePBgRz664D03yXnN2H
Kaj4stut/voGuGlOV6LrMp+/NXF4eqsQpHBXVK7Ro2B4gsLbu0c2w/vSi8fG
DSjo4zVo8WFaDIYvUzrbT1FwhG+DnjfLdthVYzSRYUbBwZ2vx/xbdsIJ18Vr
ERYUVBrpXGiL2QNuYilrblhTcNJtY1d2gxyU3hwX1LOnoNiDYNrsDkXo3xmR
quRMwVs9YU43A5WBpUdRRsydgj+rPwclsqjCYUU/zRlvZvyOU7X0pBBshyQb
+29TsDnmOV9FtCaERjYZ1wZQcNtNxWWPtQegjUG/mhBKwSyX2Wd18ofhQsbz
WEykIC277Xmr7HEgaf7Z5JPCzJ/HmIYr6kNuj8KTN08pqBYcpcZZcAIWeUqf
q+Qy5/vuq2b8pCFEu1XXKVRQMHDAwjWs9TSo8HLqu1ZRkGE76aopfga+Z+h0
FHygYNy32U0ML1PY3fvp++7PFExpHP2+T9sM6jS7F3cMMPOpNrHyOs0CHHo3
+l4aouCVOVUuT2dLEHA350z/RUF2yQs1BZoXwTLzB//WKQpemHQzekBYwTIv
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
DhIgZjt0NjiTjmdjivfv/8Fcv/Pr7PJs5ngcZue1hgi453fxiORzOnY3lIof
HibA5WmJ/3IJHT2NlH35xwgYzwltlSulY7Kp/etFpq2KLcQuldNx3quY1j/O
zPcHrrct7+hIC7t6KGqSGY9f5xfT6+no7a1tXvObgJe/FXT6Gujo6tL3NnCK
gD0LlLj1n+j4ky3okOYfAsSpRfu8W+n4t3tvedY0AZwyZGeDXjpetacZ4BwB
txX63wb109F9+WJTN9OLai94y7/RMcZh+1WHeQImjp/LkRii45jOyXUhfwmw
MZZbOjtMR7UwW4G1CwR8MyfpRvyi44LjEbVwplsd80eWJujowlPN8F8k4Khn
oKIcQcd3AYJec0xX3zYNtJmiYwH3IwmrJQJKIti3tszSUYRWNSi7TIBsQrcz
6S8dSQrif8KYzn6c9051kY4+sfvFx5hOLDQxT/9HR+WXYkNhKwQIlO/K7WUR
winGW/depu9Xsy6vYxNCLat8SfF/BJCbOnUPcwjhtbv9CxeZ9u3Iib/BKYTS
hnsnUphe7Pf9lU8RQp0dyf+6mHYbNlYa5hJCjrm1ctyrBEwydgZt5BXCOdFr
/ipM28yzdJxYJ4Sk/97PXvzf//rVjq1BfEIYHDkefIfpM+RnLmUbhHAP34/9
mUy3rrtd+VtQCIUtUrjeM31M6NQ6CSEh7DbcuNLFdI2Y9PmzG4XQVOk47xjT
GtKrueEiQsjbKwtzTL+Sb1+u2SKEdUFVYStMy6lmHV0SE8L/31/4P82YkJY=

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAGIQzbyf69xj00a7/2Dw3t53ZtWRGZPW2zOAwQf7Hvl9
c6dN2g/nv/rO9t+x+AKcb/F3YsDmghtw/sl7Ec1Myg/gfAenkN/Lkp7A+VEF
nh+2Rr6w/we1b5+iVtOBpW/sYfaHzNBafDfvA1y9NOte5wlpn+D8duOjmw50
fIGrd3X3SljW9g0uf7Tzi1pL1Q+Ee3tF9tyf8QvOTyzf2P9h0h84v1bpiGH9
9n9wvt6/2m9MmQwOMP7x2IjPCimMDoxQvuG83Ou1JUxweZfAg1Fbi5gdYO7R
fup/VLuNBS5fJFBoM28KK5yfvO5C0OsJbHD1arrZAeWL2B1g4XFn6fV5Wkoc
cPnJci5v7y7kgNv/69FPR355Trh8wvL10xzmcMLlGQTD1B+t5oLb5/nWKjxu
JTdcfcqqqDzJPTxw+Yf/eCZdOMkL18927G9I0lE+OP9/ruZ/o2v8cPUBRzxV
8rME4PxAWY/zTs8R/D3PHr/dmicIt6/6pVyM2FsEf3HMd1uxMiG4egXO/Hzm
bwi+H6PB8rxiYXh4zDK9/6d4uzBc/mlmX1Dlb2G4+25Z8QZ8tRKB8y9w9/gW
VonA1avKqe/hYBGF87VquA3luhH8FuH+rwqcYnD3uUtv0D08UQwuHxdTsDVI
UBzOV3tZ6ZzQJw63L/yZgiuvmARc/q5M+rTlUxB8dh2OwsDbEoj0Y73S+7ei
JNw+AHaHXTA=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{0, 2 Pi}, {0., 1.0000000000000002`}}, {{0, 6.283185307179586}, {
        0., 1.0000000000000002`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"A\"", "\"B\"", "\"Z\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7547439243892717`*^9, 3.7547439404535356`*^9}, {
  3.7547439726654453`*^9, 3.7547439899820185`*^9}, {3.7547440344658723`*^9, 
  3.754744051648374*^9}, {3.75474412989634*^9, 3.754744404432459*^9}, {
  3.7547446264276977`*^9, 3.7547446626376667`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.754744813580776*^9, 3.7547448232732525`*^9}},
 EmphasizeSyntaxErrors->True]
},
WindowSize->{1303, 725},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.3 Inherited,
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1619, 47, 221, "Input"],
Cell[2202, 71, 316, 4, 39, "Output"],
Cell[2521, 77, 317, 4, 39, "Output"],
Cell[2841, 83, 31320, 580, 309, "Output"]
}, Open  ]],
Cell[34176, 666, 124, 2, 39, "Input"]
}
]
*)

(* End of internal cache information *)
